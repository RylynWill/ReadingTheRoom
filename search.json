[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Hi! This blog I made for my Social Network Class. I hope you enjoy it!"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/post-with-code/Wicked Problems.html",
    "href": "posts/post-with-code/Wicked Problems.html",
    "title": "Wicked Problems Proposal",
    "section": "",
    "text": "Wicked Problems are defined as complex challenges that lack straightforward solutions, often causing disagreement among multiple stakeholders pertaining to the best policy solution for these proposed problems. While the term is normally seen as bad due to their complexity as well the negative outcomes given some of these issues, they are not inherently bad, in fact depending on who is asked, these problems might not exist. In a pilot study done during the semester I asked 25 individuals to rate the connectivity of 35 concepts that were generated by my fellow classmates. In doing this I hope to understand two things, the perception of these concepts as problems in the United States, and how individuals perceive the connection between these concepts.\n\n\nWhat is the perception of these concepts as problems in the United states based on the respondents current definition of the concepts?\nWhat are the perceived connections between these concepts and how can they be grouped together and summed up into an overarching theme.\n\n\n\nI am expecting to find imperialism as a key influence in one of the groups, I also expect economy and the gov’t structure to be in the same group.\nThe largest problem im expecting is Racism and the Economy as these are major issues in the news in the past couple of years between the BLM protest, January 6th and inflation after the pandemic.\n\n\n\n\n\n\ncounts &lt;- table(demog$age, demog$`party _d`, demog$region)\n\n# Reshape data for ggplot\ncounts &lt;- as.data.frame(counts)\nnames(counts) &lt;- c('age', 'party_id', 'region','count')\n\n# Plotting\nggplot(counts, aes(x = factor(age), y = count, fill = party_id)) +\n  geom_bar(stat = 'identity', position = 'stack') +\n  labs(x = 'Age', y = 'Counts', fill = 'Party ID') +\n  scale_fill_manual(values = c('pink', 'skyblue', 'lightgreen', 'orange')) +\n  ggtitle('Party IDs Across Age Groups') +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(counts, aes(x = factor(region), y = count, fill = party_id)) +\n  geom_bar(stat = 'identity', position = 'stack') +\n  labs(x = 'Age', y = 'Counts', fill = 'Party ID') +\n  scale_fill_manual(values = c('pink', 'skyblue', 'lightgreen', 'orange')) +\n  ggtitle('Party IDs Across Age Groups') +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\nSurvey Analysis - Based on survey results the respondents rated how much of a problem they believed each concept to be on a scale of 1 to 5. From there I averaged the results for each concept and plotted them on a bar graph. #### concepts rating by party idea\n\npivot_demog &lt;- pivot_longer(demog, cols = Imperialism:Eurocentrism, names_to = \"Concept\", values_to = \"Ratings\")\n\n# Plotting\nggplot(pivot_demog, aes(x = Concept, y = Ratings, fill = `party _d`)) +\n  geom_bar(stat = 'identity', position = 'dodge') +\n  labs(x = 'Concepts', y = 'Ratings', fill = 'Respondents') +\n  ggtitle('Ratings of Concepts by Respondents') +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n\naverage_ratings &lt;- pivot_demog %&gt;%\n  group_by(Concept) %&gt;%\n  summarise(Average_Rating = mean(Ratings))\n\n# Plotting\nlibrary(ggplot2)\n\nggplot(average_ratings, aes(x = Concept, y = Average_Rating)) +\n  geom_bar(stat = 'identity', fill = 'skyblue', width = 0.5) +\n  geom_text(aes(label = round(Average_Rating, 2)), vjust = -0.5, size = 3, color = \"black\") +\n  labs(x = 'Concepts', y = 'Average Ratings') +\n  ggtitle('Average Ratings of Concepts') +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability\n\n\n\n\n\n\n\n\n##Concept Grouping\nI used the average clustering method to group the concepts together based on their degree strength. Its worth noting that I used tie count as both degree strength and weight. I used Tnet package to allow me to choose which measurement should be prioritized and for this project I prioritized degree strength to identify centrality, specifically out-degree strength.\nfrom there I partitioned the clustering at height 5, which gave me 9 categorizes which I developed my block model on and then created sub graphs based on structural equivalence. Once I had the subgraphs Identified the most central node of the 9 groups as the node with the greatest out degree, as I got 9 directed graphs.\n\n\n\n\n\nTopics related to the exertion, distribution, and dynamics of power in society, politics, and economics. This category encompasses topics such as imperialism, racism, colonization, capitalism, and other forms of power dynamics.\n\n\n\nTopics related to the foundational elements of society that support its functioning, including housing, education, infrastructure, and criminal justice.\n\n\n\nTopics concerning the economic system, government structures, and their interactions, including economy, income/wealth, corporate wealth, federal/government structure, and related aspects.\n\n\n\nTopics pertaining to regulatory measures, control mechanisms, and governance practices, such as gun control, banking regulations, voting access, and other forms of regulation.\n\n\n\nTopics addressing global issues and challenges that transcend national boundaries, including climate change, child poverty, nationalizing, digital literacy, and other global challenges.\n\n\n\nTopics encompassing social and global issues that impact societies worldwide, such as AI, immigration, misinformation, pollution & plastic, and indigenous sovereignty.\n\n\n\nTopics revolving around trust, rights, and societal values, including weakening of the global West, public trust, homeless rights, welfare systems, and civil rights.\n\n\n\nTopics concerning media, journalism, governance, and their roles in society, including journalism/media, foreign policy, insider trading, generational wealth, and Eurocentrism.\n\n\n\nTopics focusing on cultural awareness, equity, and diversity, such as cultural awareness & equity and Eurocentrism."
  },
  {
    "objectID": "posts/post-with-code/Wicked Problems.html#research-questions",
    "href": "posts/post-with-code/Wicked Problems.html#research-questions",
    "title": "Wicked Problems Proposal",
    "section": "",
    "text": "What is the perception of these concepts as problems in the United states based on the respondents current definition of the concepts?\nWhat are the perceived connections between these concepts and how can they be grouped together and summed up into an overarching theme."
  },
  {
    "objectID": "posts/post-with-code/Wicked Problems.html#hypothesis",
    "href": "posts/post-with-code/Wicked Problems.html#hypothesis",
    "title": "Wicked Problems Proposal",
    "section": "",
    "text": "I am expecting to find imperialism as a key influence in one of the groups, I also expect economy and the gov’t structure to be in the same group.\nThe largest problem im expecting is Racism and the Economy as these are major issues in the news in the past couple of years between the BLM protest, January 6th and inflation after the pandemic."
  },
  {
    "objectID": "posts/post-with-code/Wicked Problems.html#demgraphics",
    "href": "posts/post-with-code/Wicked Problems.html#demgraphics",
    "title": "Wicked Problems Proposal",
    "section": "",
    "text": "counts &lt;- table(demog$age, demog$`party _d`, demog$region)\n\n# Reshape data for ggplot\ncounts &lt;- as.data.frame(counts)\nnames(counts) &lt;- c('age', 'party_id', 'region','count')\n\n# Plotting\nggplot(counts, aes(x = factor(age), y = count, fill = party_id)) +\n  geom_bar(stat = 'identity', position = 'stack') +\n  labs(x = 'Age', y = 'Counts', fill = 'Party ID') +\n  scale_fill_manual(values = c('pink', 'skyblue', 'lightgreen', 'orange')) +\n  ggtitle('Party IDs Across Age Groups') +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(counts, aes(x = factor(region), y = count, fill = party_id)) +\n  geom_bar(stat = 'identity', position = 'stack') +\n  labs(x = 'Age', y = 'Counts', fill = 'Party ID') +\n  scale_fill_manual(values = c('pink', 'skyblue', 'lightgreen', 'orange')) +\n  ggtitle('Party IDs Across Age Groups') +\n  theme_minimal()"
  },
  {
    "objectID": "posts/post-with-code/Wicked Problems.html#concept-ratings",
    "href": "posts/post-with-code/Wicked Problems.html#concept-ratings",
    "title": "Wicked Problems Proposal",
    "section": "",
    "text": "Survey Analysis - Based on survey results the respondents rated how much of a problem they believed each concept to be on a scale of 1 to 5. From there I averaged the results for each concept and plotted them on a bar graph. #### concepts rating by party idea\n\npivot_demog &lt;- pivot_longer(demog, cols = Imperialism:Eurocentrism, names_to = \"Concept\", values_to = \"Ratings\")\n\n# Plotting\nggplot(pivot_demog, aes(x = Concept, y = Ratings, fill = `party _d`)) +\n  geom_bar(stat = 'identity', position = 'dodge') +\n  labs(x = 'Concepts', y = 'Ratings', fill = 'Respondents') +\n  ggtitle('Ratings of Concepts by Respondents') +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n\naverage_ratings &lt;- pivot_demog %&gt;%\n  group_by(Concept) %&gt;%\n  summarise(Average_Rating = mean(Ratings))\n\n# Plotting\nlibrary(ggplot2)\n\nggplot(average_ratings, aes(x = Concept, y = Average_Rating)) +\n  geom_bar(stat = 'identity', fill = 'skyblue', width = 0.5) +\n  geom_text(aes(label = round(Average_Rating, 2)), vjust = -0.5, size = 3, color = \"black\") +\n  labs(x = 'Concepts', y = 'Average Ratings') +\n  ggtitle('Average Ratings of Concepts') +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for better readability\n\n\n\n\n\n\n\n\n##Concept Grouping\nI used the average clustering method to group the concepts together based on their degree strength. Its worth noting that I used tie count as both degree strength and weight. I used Tnet package to allow me to choose which measurement should be prioritized and for this project I prioritized degree strength to identify centrality, specifically out-degree strength.\nfrom there I partitioned the clustering at height 5, which gave me 9 categorizes which I developed my block model on and then created sub graphs based on structural equivalence. Once I had the subgraphs Identified the most central node of the 9 groups as the node with the greatest out degree, as I got 9 directed graphs.\n\n\n\n\n\nTopics related to the exertion, distribution, and dynamics of power in society, politics, and economics. This category encompasses topics such as imperialism, racism, colonization, capitalism, and other forms of power dynamics.\n\n\n\nTopics related to the foundational elements of society that support its functioning, including housing, education, infrastructure, and criminal justice.\n\n\n\nTopics concerning the economic system, government structures, and their interactions, including economy, income/wealth, corporate wealth, federal/government structure, and related aspects.\n\n\n\nTopics pertaining to regulatory measures, control mechanisms, and governance practices, such as gun control, banking regulations, voting access, and other forms of regulation.\n\n\n\nTopics addressing global issues and challenges that transcend national boundaries, including climate change, child poverty, nationalizing, digital literacy, and other global challenges.\n\n\n\nTopics encompassing social and global issues that impact societies worldwide, such as AI, immigration, misinformation, pollution & plastic, and indigenous sovereignty.\n\n\n\nTopics revolving around trust, rights, and societal values, including weakening of the global West, public trust, homeless rights, welfare systems, and civil rights.\n\n\n\nTopics concerning media, journalism, governance, and their roles in society, including journalism/media, foreign policy, insider trading, generational wealth, and Eurocentrism.\n\n\n\nTopics focusing on cultural awareness, equity, and diversity, such as cultural awareness & equity and Eurocentrism."
  },
  {
    "objectID": "posts/post-with-code/WickedConcepts.html",
    "href": "posts/post-with-code/WickedConcepts.html",
    "title": "Wicked Concepts",
    "section": "",
    "text": "Code\n#read in data tables from survey, 35 by 9 data table\nq1 &lt;- read_csv(\"data/q1.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq2 &lt;- read_csv(\"data/q2.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq3 &lt;- read_csv(\"data/q3.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq4 &lt;- read_csv(\"data/q4.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq5 &lt;- read_csv(\"data/q5.csv\", show_col_types = FALSE )\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\n# remove total row so that it's 35 by 8, including column of concepts\nq1 &lt;- select(q1, -9)\nq2 &lt;- select(q2, -9)\nq3 &lt;- select(q3, -9)\nq4 &lt;- select(q4, -9)\nq5 &lt;- select(q5, -9)\n\nhead(q1, 2)\n\n\n\n  \n\n\n\nCode\nhead(q2, 2)\n\n\n\n  \n\n\n\nCode\nhead(q3, 2)\n\n\n\n  \n\n\n\nCode\nhead(q4, 2)\n\n\n\n  \n\n\n\nCode\nhead(q5, 2)\n\n\n\n  \n\n\n\n\n\nCode\n# Join columns by term column, to create 35 by 35\nconcepts &lt;- left_join(q1,q2,by=\"...1\")\nconcepts &lt;- left_join(concepts,q3,by=\"...1\")\nconcepts &lt;- left_join(concepts,q4,by=\"...1\")\nconcepts &lt;- left_join(concepts,q5,by=\"...1\")\nconcepts &lt;- select(concepts, -1)\nrownames(concepts)&lt;-colnames(concepts)\nnamesss &lt;- colnames(concepts)\n\n\n`\n\n\nCode\nconcepts &lt;- as.matrix(concepts)\n#replace NA's with Zero as the value is not missing, there is just no tie so there weight it 0\nconcepts[is.na(concepts)] &lt;- 0\n# Set diag to false to remove self loops\ncg &lt;- graph_from_adjacency_matrix(concepts)\n#Save the graph as a data frame that shows each ties and their weight.\ncg_frame &lt;-get.data.frame(cg)\n\n\n\n\n\n\nCode\n#Identify unique vertices for the purpose of \nunique_vertices &lt;- unique(c(cg_frame$from, cg_frame$to))\nvalid_vertices &lt;- unique_vertices[!duplicated(unique_vertices) & nchar(unique_vertices) &gt; 0]\n\n# Create an empty graph\ncg_graph &lt;- graph(edges = numeric(0), directed = FALSE)\n\n# Add vertices to the graph\ncg_graph &lt;- add_vertices(cg_graph, nv = length(valid_vertices), name = valid_vertices)\n\n# Count the occurrences of each unique tie\nties_count &lt;- table(apply(cg_frame, 1, function(x) paste(sort(x), collapse = \"-\")))\n\n# Add subsequent ties of the same kind to the count of the first instance\nunique_ties &lt;- unique(apply(cg_frame, 1, function(x) paste(sort(x), collapse = \"-\")))\nfor (tie in unique_ties) {\n  if (ties_count[tie] &gt; 1) {\n    first_instance &lt;- which(apply(cg_frame, 1, function(x) paste(sort(x), collapse = \"-\")) == tie)[1]\n    ties_count[tie] &lt;- ties_count[tie] + (ties_count[tie] - 1)\n    ties_count[tie] &lt;- ties_count[tie] - 1  # Subtract 1 because we're counting the first instance as unique\n  }\n}\n# Add vertices to the graph\ncg_graph &lt;- add_vertices(cg_graph, nv = length(valid_vertices), name = valid_vertices)\n\n# Count the occurrences of each unique tie\nties_count &lt;- table(apply(cg_frame, 1, function(x) paste(sort(x), collapse = \"-\")))\n\nunique_ties &lt;- names(ties_count)\ntie_parts &lt;- strsplit(unique_ties, \"-\")\nfrom_vertices &lt;- sapply(tie_parts, `[`, 1)\nto_vertices &lt;- sapply(tie_parts, `[`, 2)\nweights &lt;- as.vector(ties_count)\n\n# Create a data frame\ncg_tie_df &lt;- data.frame(from = from_vertices, to = to_vertices, weight = weights)\n\n# Print the data frame\nhead(cg_tie_df)\n\n\n\n  \n\n\n\n\n\n\n\n\nCode\ncg_tie_df$from &lt;- as.integer(as.factor(cg_tie_df$from))\ncg_tie_df$to &lt;- as.integer(as.factor(cg_tie_df$to))\n\n# Create the network object\ncg_tnet &lt;- as.tnet(cg_tie_df, type = \"weighted one-mode tnet\")"
  },
  {
    "objectID": "posts/post-with-code/WickedConcepts.html#data-wrangling",
    "href": "posts/post-with-code/WickedConcepts.html#data-wrangling",
    "title": "Wicked Concepts",
    "section": "",
    "text": "Code\n#read in data tables from survey, 35 by 9 data table\nq1 &lt;- read_csv(\"data/q1.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq2 &lt;- read_csv(\"data/q2.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq3 &lt;- read_csv(\"data/q3.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq4 &lt;- read_csv(\"data/q4.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq5 &lt;- read_csv(\"data/q5.csv\", show_col_types = FALSE )\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\n# remove total row so that it's 35 by 8, including column of concepts\nq1 &lt;- select(q1, -9)\nq2 &lt;- select(q2, -9)\nq3 &lt;- select(q3, -9)\nq4 &lt;- select(q4, -9)\nq5 &lt;- select(q5, -9)\n\nhead(q1, 2)\n\n\n\n  \n\n\n\nCode\nhead(q2, 2)\n\n\n\n  \n\n\n\nCode\nhead(q3, 2)\n\n\n\n  \n\n\n\nCode\nhead(q4, 2)\n\n\n\n  \n\n\n\nCode\nhead(q5, 2)\n\n\n\n  \n\n\n\n\n\nCode\n# Join columns by term column, to create 35 by 35\nconcepts &lt;- left_join(q1,q2,by=\"...1\")\nconcepts &lt;- left_join(concepts,q3,by=\"...1\")\nconcepts &lt;- left_join(concepts,q4,by=\"...1\")\nconcepts &lt;- left_join(concepts,q5,by=\"...1\")\nconcepts &lt;- select(concepts, -1)\nrownames(concepts)&lt;-colnames(concepts)\nnamesss &lt;- colnames(concepts)\n\n\n`\n\n\nCode\nconcepts &lt;- as.matrix(concepts)\n#replace NA's with Zero as the value is not missing, there is just no tie so there weight it 0\nconcepts[is.na(concepts)] &lt;- 0\n# Set diag to false to remove self loops\ncg &lt;- graph_from_adjacency_matrix(concepts)\n#Save the graph as a data frame that shows each ties and their weight.\ncg_frame &lt;-get.data.frame(cg)\n\n\n\n\n\n\nCode\n#Identify unique vertices for the purpose of \nunique_vertices &lt;- unique(c(cg_frame$from, cg_frame$to))\nvalid_vertices &lt;- unique_vertices[!duplicated(unique_vertices) & nchar(unique_vertices) &gt; 0]\n\n# Create an empty graph\ncg_graph &lt;- graph(edges = numeric(0), directed = FALSE)\n\n# Add vertices to the graph\ncg_graph &lt;- add_vertices(cg_graph, nv = length(valid_vertices), name = valid_vertices)\n\n# Count the occurrences of each unique tie\nties_count &lt;- table(apply(cg_frame, 1, function(x) paste(sort(x), collapse = \"-\")))\n\n# Add subsequent ties of the same kind to the count of the first instance\nunique_ties &lt;- unique(apply(cg_frame, 1, function(x) paste(sort(x), collapse = \"-\")))\nfor (tie in unique_ties) {\n  if (ties_count[tie] &gt; 1) {\n    first_instance &lt;- which(apply(cg_frame, 1, function(x) paste(sort(x), collapse = \"-\")) == tie)[1]\n    ties_count[tie] &lt;- ties_count[tie] + (ties_count[tie] - 1)\n    ties_count[tie] &lt;- ties_count[tie] - 1  # Subtract 1 because we're counting the first instance as unique\n  }\n}\n# Add vertices to the graph\ncg_graph &lt;- add_vertices(cg_graph, nv = length(valid_vertices), name = valid_vertices)\n\n# Count the occurrences of each unique tie\nties_count &lt;- table(apply(cg_frame, 1, function(x) paste(sort(x), collapse = \"-\")))\n\nunique_ties &lt;- names(ties_count)\ntie_parts &lt;- strsplit(unique_ties, \"-\")\nfrom_vertices &lt;- sapply(tie_parts, `[`, 1)\nto_vertices &lt;- sapply(tie_parts, `[`, 2)\nweights &lt;- as.vector(ties_count)\n\n# Create a data frame\ncg_tie_df &lt;- data.frame(from = from_vertices, to = to_vertices, weight = weights)\n\n# Print the data frame\nhead(cg_tie_df)\n\n\n\n  \n\n\n\n\n\n\n\n\nCode\ncg_tie_df$from &lt;- as.integer(as.factor(cg_tie_df$from))\ncg_tie_df$to &lt;- as.integer(as.factor(cg_tie_df$to))\n\n# Create the network object\ncg_tnet &lt;- as.tnet(cg_tie_df, type = \"weighted one-mode tnet\")"
  },
  {
    "objectID": "posts/post-with-code/WickedConcepts.html#node-level-measures",
    "href": "posts/post-with-code/WickedConcepts.html#node-level-measures",
    "title": "Wicked Concepts",
    "section": "Node-Level Measures",
    "text": "Node-Level Measures\n\n\nCode\n#Out Degree/ out-strength \ncon.outdegree &lt;- degree_w(cg_tnet, measure = c(\"degree\", \"output\"), type=\"out\", alpha = 1)\n#In Degree/ In-strength \ncon.indegree &lt;- degree_w(cg_tnet, measure = c(\"degree\", \"output\"), type=\"in\", alpha = 1)\n#closeness\nc_close &lt;- closeness_w(cg_tnet, directed =NULL, gconly = FALSE, alpha = 1)\n#betweeness\nc_btwn &lt;- betweenness_w(cg_tnet, directed =NULL, alpha = 1)\n#constraints\n\n#Rename the columns because the function output names the columns the same regardless of the IN;Out status\ncolnames(con.outdegree)[2] &lt;- \"Out-Strength\"\ncolnames(con.outdegree)[3] &lt;- \"Out-Degree\"\ncolnames(con.indegree)[2] &lt;- \"In-Strength\"\ncolnames(con.indegree)[3] &lt;- \"In-Degree\"\n\n\n#Join the node measures to the same data frame\ncon.nodes &lt;-left_join(as.data.frame(con.outdegree), as.data.frame(con.indegree), by= \"node\")\ncon.nodes &lt;-left_join(as.data.frame(con.nodes), as.data.frame(c_close), by= \"node\")\ncon.nodes &lt;-left_join(con.nodes, as.data.frame(c_btwn), by= \"node\")\n\n\n#temporary rename of node column to \"name\" to join the evigenor centrality for each nodes to the dataset and then \"node\" was replaced as the variable name for the nodes\ncolnames(con.nodes)[1] &lt;- \"name\"\ncg.stat &lt;- as.network.matrix(cg_tnet) \nset.vertex.attribute(cg.stat, \"name\",namesss) \ncon.nodes &lt;- left_join(con.nodes, get.eigen(cg.stat), by = \"name\")\ncolnames(con.nodes)[1] &lt;- \"node\"\n\n\nhead(con.nodes, 15)"
  },
  {
    "objectID": "posts/post-with-code/WickedConcepts.html#strucutual-equivalnce",
    "href": "posts/post-with-code/WickedConcepts.html#strucutual-equivalnce",
    "title": "Wicked Concepts",
    "section": "Strucutual Equivalnce",
    "text": "Strucutual Equivalnce\n\n\nCode\n#STRUCTUAL Equivalence \ncg.se &lt;-equiv.clust(cg.stat,\n                          equiv.fun = \"sedist\",\n                          method = \"hamming\", \n                          mode = \"graph\")\nplot(cg.se,labels = cg.se$glabels)\n\n\n\n\n\n\n\n\n\nCode\n#Average Cluster Method\ncg.ase &lt;- equiv.clust(cg.stat,\n                          equiv.fun = \"sedist\",\n                      cluster.method = \"average\",\n                          method = \"hamming\", \n                          mode = \"graph\")\nplot(cg.ase, cg.ase$glabels)\n\n\n\n\n\n\n\n\n\nCode\n#Single Cluster Method\ncg.sse&lt;- equiv.clust(cg.stat,\n                          equiv.fun = \"sedist\",\n                      cluster.method = \"single\",\n                          method = \"hamming\", \n                          mode = \"graph\")\nplot(cg.sse,labels = cg.sse$glabels)\n\n\n\n\n\n\n\n\n\nCode\n# Ward.D method\ncg.wse&lt;- equiv.clust(cg.stat,\n                          equiv.fun = \"sedist\",\n                      cluster.method = \"ward.D\",\n                          method = \"hamming\", \n                          mode = \"graph\")\nplot(cg.wse,labels = cg.wse$glabels)"
  },
  {
    "objectID": "posts/post-with-code/WickedConcepts.html#partitioning",
    "href": "posts/post-with-code/WickedConcepts.html#partitioning",
    "title": "Wicked Concepts",
    "section": "Partitioning",
    "text": "Partitioning\n\nHeight equal to 15\n\n\nCode\n#Partitioning regular clustering - 15\nplot(cg.se,labels = cg.se$glabels)\nrect.hclust(cg.se$cluster, h = 15)\n\n\n\n\n\n\n\n\n\nCode\n#Partitioning Average Cluster Method - 15\nplot(cg.ase,labels = cg.ase$glabels)\nrect.hclust(cg.ase$cluster, h = 15)\n\n\n\n\n\n\n\n\n\nCode\n#Partitioning Single Cluster Method - 15\nplot(cg.sse,labels = cg.sse$glabels)\nrect.hclust(cg.sse$cluster, h = 15)\n\n\n\n\n\n\n\n\n\nCode\n#Partitioning Ward.D method -15\nplot(cg.wse,labels = cg.wse$glabels)\nrect.hclust(cg.se$cluster, h = 15)\n\n\n\n\n\n\n\n\n\n\n\nHeight equal to 10\n\n\nCode\n#Partitioning regular clustering -10\nplot(cg.se,labels = cg.se$glabels)\nrect.hclust(cg.se$cluster, h = 10)\n\n\n\n\n\n\n\n\n\nCode\n#Partitioning Average Cluster Method -10\nplot(cg.ase,labels = cg.ase$glabels)\nrect.hclust(cg.ase$cluster, h = 10)\n\n\n\n\n\n\n\n\n\nCode\n#Partitioning Single Cluster Method -10\nplot(cg.sse,labels = cg.sse$glabels)\nrect.hclust(cg.sse$cluster, h = 10)\n\n\n\n\n\n\n\n\n\nCode\n#Partitioning Ward.D method -10\nplot(cg.wse,labels = cg.wse$glabels)\nrect.hclust(cg.se$cluster, h = 10)"
  },
  {
    "objectID": "posts/post-with-code/WickedConcepts.html#blockmodeling",
    "href": "posts/post-with-code/WickedConcepts.html#blockmodeling",
    "title": "Wicked Concepts",
    "section": "BlockModeling",
    "text": "BlockModeling\n\nHeight at 15 k=3\n\n\nCode\n#testing block model\nblock_se &lt;-blockmodel(cg.stat, cg.se, k=3, h=15)\nblock_ase &lt;-blockmodel(cg.stat, cg.ase, k=3, h=15)\nblock_sse &lt;-blockmodel(cg.stat, cg.sse, k=3, h=15)\nblock_wse &lt;-blockmodel(cg.stat, cg.wse, k=5, h=15) #tryin out 5\n\n#View models\nplot.block(block_se, cex.lab=.5)\n\n\n\n\n\n\n\n\n\nCode\nplot.block(block_ase, cex.lab=.5)\n\n\n\n\n\n\n\n\n\nCode\nplot.block(block_sse, cex.lab=.5)\n\n\n\n\n\n\n\n\n\nCode\nplot.block(block_wse, cex.lab=.5)\n\n\n\n\n\n\n\n\n\n\n\nHeight at 10, k=3\n\n\nCode\n#testing block model\nblock_se &lt;-blockmodel(cg.stat, cg.se, k=3, h=10)\nblock_ase &lt;-blockmodel(cg.stat, cg.ase, k=3, h=10)\nblock_sse &lt;-blockmodel(cg.stat, cg.sse, k=3, h=10)\nblock_wse &lt;-blockmodel(cg.stat, cg.wse, k=5, h=10) #tryin out 5\n\n#View models\nplot.block(block_se, cex.lab=.5)\n\n\n\n\n\n\n\n\n\nCode\nplot.block(block_ase, cex.lab=.5)\n\n\n\n\n\n\n\n\n\nCode\nplot.block(block_sse, cex.lab=.5)\n\n\n\n\n\n\n\n\n\nCode\nplot.block(block_wse, cex.lab=.5)"
  },
  {
    "objectID": "posts/post-with-code/WickedConcepts.html#lets-plot-this",
    "href": "posts/post-with-code/WickedConcepts.html#lets-plot-this",
    "title": "Wicked Concepts",
    "section": "Let’s Plot this",
    "text": "Let’s Plot this\n\nStatnet\n\n\nCode\n# chosen blockmodel and chose partition partitions\ncg_mod &lt;- blockmodel(cg.stat, cg.se, k=5)\n# assign block membership to vertex attribute\ncg.stat%v%\"role\" &lt;- cg_mod$block.membership[match(cg.stat%v%\"vertex.names\",\n                                                     cg_mod$plabels)]\n\nGGally::ggnet2(cg.stat,\n               node.color = \"role\",\n               node.size = degree(cg.stat, gmode = \"graph\"),\n               node.label = \"vertex.names\",\n               node.alpha = .7)\n\n\n\n\n\n\n\n\n\n\n\nigraph\n\n\nCode\ncg.ig &lt;- graph_from_data_frame(cg_tnet)\nV(cg.ig)$role &lt;- cg_mod$block.membership[match(V(cg.ig)$name, cg_mod$plabels)]\nplot.igraph(cg.ig,\n            vertex.color = V(cg.ig)$role,\n            vertex.size = 0.5+(igraph::degree(cg.ig)*0.5))"
  },
  {
    "objectID": "posts/post-with-code/RolesandPartions.html",
    "href": "posts/post-with-code/RolesandPartions.html",
    "title": "Plots by Roles",
    "section": "",
    "text": "Code\n#read in data tables from survey, 35 by 9 data table\nq1 &lt;- read_csv(\"data/q1.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq2 &lt;- read_csv(\"data/q2.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq3 &lt;- read_csv(\"data/q3.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq4 &lt;- read_csv(\"data/q4.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq5 &lt;- read_csv(\"data/q5.csv\", show_col_types = FALSE )\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\n# remove total row so that it's 35 by 8, including column of concepts\nq1 &lt;- select(q1, -9)\nq2 &lt;- select(q2, -9)\nq3 &lt;- select(q3, -9)\nq4 &lt;- select(q4, -9)\nq5 &lt;- select(q5, -9)\n\nhead(q1, 2)\n\n\n\n  \n\n\n\nCode\nhead(q2, 2)\n\n\n\n  \n\n\n\nCode\nhead(q3, 2)\n\n\n\n  \n\n\n\nCode\nhead(q4, 2)\n\n\n\n  \n\n\n\nCode\nhead(q5, 2)\n\n\n\n  \n\n\n\n\n\nCode\n# Join columns by term column, to create 35 by 35\nconcepts &lt;- left_join(q1,q2,by=\"...1\")\nconcepts &lt;- left_join(concepts,q3,by=\"...1\")\nconcepts &lt;- left_join(concepts,q4,by=\"...1\")\nconcepts &lt;- left_join(concepts,q5,by=\"...1\")\nconcepts &lt;- select(concepts, -1)\nrownames(concepts)&lt;-colnames(concepts)\n\n\n`\n\n\nCode\nconcepts &lt;- as.matrix(concepts)\n#replace NA's with Zero as the value is not missing, there is just no tie so there weight it 0\nconcepts[is.na(concepts)] &lt;- 0\n# Set diag to false to remove self loops\ncg &lt;- graph_from_adjacency_matrix(concepts)\n#Save the graph as a data frame that shows each ties and their weight.\ncg_frame &lt;-get.data.frame(cg)\n\n\n\n\n\n\nCode\n# Identify unique vertices, I want the definition of a tie, to be the first instance of that connection.\nunique_vertices &lt;- unique(c(cg_frame$from, cg_frame$to))\nvalid_vertices &lt;- unique_vertices[nchar(unique_vertices) &gt; 0]\n\n# Create an empty graph\ncg_graph &lt;- graph(edges = numeric(0), directed = FALSE)\n\n# Add vertices to the graph\ncg_graph &lt;- add_vertices(cg_graph, nv = length(valid_vertices), name = valid_vertices)\n\n# Count tie occurrences, the number of times that tie occurs, will be it's strength/weight\nties_count &lt;- table(apply(cg_frame, 1, function(x) paste(sort(x), collapse = \"-\")))\n\n# Adjust tie counts for subsequent ties # this will count reverse tiess so B to A where the code above check A to B\nunique_ties &lt;- unique(apply(cg_frame, 1, function(x) paste(sort(x), collapse = \"-\")))\nfor (tie in unique_ties) {\n  ties_count[tie] &lt;- ifelse(ties_count[tie] &gt; 1, ties_count[tie], ties_count[tie] + 1)\n}\n\n# Process ties data\ntie_parts &lt;- strsplit(names(ties_count), \"-\")\nfrom_vertices &lt;- sapply(tie_parts, `[`, 1)\nto_vertices &lt;- sapply(tie_parts, `[`, 2)\nweights &lt;- as.vector(ties_count)\n\n# Create a data frame\ncg_tie_df &lt;- data.frame(from = from_vertices, to = to_vertices, weight = weights)\n\n# Print the data frame\nhead(cg_tie_df)\n\n\n\n  \n\n\n\n\n\n\n\n\nCode\ncg_tie_df$from &lt;- as.integer(as.factor(cg_tie_df$from))\ncg_tie_df$to &lt;- as.integer(as.factor(cg_tie_df$to))\n\n# Create the network object\ncg_tnet &lt;- as.tnet(cg_tie_df, type = \"weighted one-mode tnet\")\ncg.ig &lt;- tnet_igraph(cg_tnet, type = \"weighted one-mode tnet\", directed = NULL)\ncg.ig&lt;- add_vertices(cg.ig, nv = length(valid_vertices), name = valid_vertices)\nnamesss &lt;-data.frame(id = 1:35, node = colnames(concepts))\ncg.stat &lt;- as.network.matrix(cg_tnet)\nnetwork.vertex.names(cg.stat) &lt;- namesss$node"
  },
  {
    "objectID": "posts/post-with-code/RolesandPartions.html#data-wrangling",
    "href": "posts/post-with-code/RolesandPartions.html#data-wrangling",
    "title": "Plots by Roles",
    "section": "",
    "text": "Code\n#read in data tables from survey, 35 by 9 data table\nq1 &lt;- read_csv(\"data/q1.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq2 &lt;- read_csv(\"data/q2.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq3 &lt;- read_csv(\"data/q3.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq4 &lt;- read_csv(\"data/q4.csv\", show_col_types = FALSE)\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\nq5 &lt;- read_csv(\"data/q5.csv\", show_col_types = FALSE )\n\n\nNew names:\n• `` -&gt; `...1`\n\n\nCode\n# remove total row so that it's 35 by 8, including column of concepts\nq1 &lt;- select(q1, -9)\nq2 &lt;- select(q2, -9)\nq3 &lt;- select(q3, -9)\nq4 &lt;- select(q4, -9)\nq5 &lt;- select(q5, -9)\n\nhead(q1, 2)\n\n\n\n  \n\n\n\nCode\nhead(q2, 2)\n\n\n\n  \n\n\n\nCode\nhead(q3, 2)\n\n\n\n  \n\n\n\nCode\nhead(q4, 2)\n\n\n\n  \n\n\n\nCode\nhead(q5, 2)\n\n\n\n  \n\n\n\n\n\nCode\n# Join columns by term column, to create 35 by 35\nconcepts &lt;- left_join(q1,q2,by=\"...1\")\nconcepts &lt;- left_join(concepts,q3,by=\"...1\")\nconcepts &lt;- left_join(concepts,q4,by=\"...1\")\nconcepts &lt;- left_join(concepts,q5,by=\"...1\")\nconcepts &lt;- select(concepts, -1)\nrownames(concepts)&lt;-colnames(concepts)\n\n\n`\n\n\nCode\nconcepts &lt;- as.matrix(concepts)\n#replace NA's with Zero as the value is not missing, there is just no tie so there weight it 0\nconcepts[is.na(concepts)] &lt;- 0\n# Set diag to false to remove self loops\ncg &lt;- graph_from_adjacency_matrix(concepts)\n#Save the graph as a data frame that shows each ties and their weight.\ncg_frame &lt;-get.data.frame(cg)\n\n\n\n\n\n\nCode\n# Identify unique vertices, I want the definition of a tie, to be the first instance of that connection.\nunique_vertices &lt;- unique(c(cg_frame$from, cg_frame$to))\nvalid_vertices &lt;- unique_vertices[nchar(unique_vertices) &gt; 0]\n\n# Create an empty graph\ncg_graph &lt;- graph(edges = numeric(0), directed = FALSE)\n\n# Add vertices to the graph\ncg_graph &lt;- add_vertices(cg_graph, nv = length(valid_vertices), name = valid_vertices)\n\n# Count tie occurrences, the number of times that tie occurs, will be it's strength/weight\nties_count &lt;- table(apply(cg_frame, 1, function(x) paste(sort(x), collapse = \"-\")))\n\n# Adjust tie counts for subsequent ties # this will count reverse tiess so B to A where the code above check A to B\nunique_ties &lt;- unique(apply(cg_frame, 1, function(x) paste(sort(x), collapse = \"-\")))\nfor (tie in unique_ties) {\n  ties_count[tie] &lt;- ifelse(ties_count[tie] &gt; 1, ties_count[tie], ties_count[tie] + 1)\n}\n\n# Process ties data\ntie_parts &lt;- strsplit(names(ties_count), \"-\")\nfrom_vertices &lt;- sapply(tie_parts, `[`, 1)\nto_vertices &lt;- sapply(tie_parts, `[`, 2)\nweights &lt;- as.vector(ties_count)\n\n# Create a data frame\ncg_tie_df &lt;- data.frame(from = from_vertices, to = to_vertices, weight = weights)\n\n# Print the data frame\nhead(cg_tie_df)\n\n\n\n  \n\n\n\n\n\n\n\n\nCode\ncg_tie_df$from &lt;- as.integer(as.factor(cg_tie_df$from))\ncg_tie_df$to &lt;- as.integer(as.factor(cg_tie_df$to))\n\n# Create the network object\ncg_tnet &lt;- as.tnet(cg_tie_df, type = \"weighted one-mode tnet\")\ncg.ig &lt;- tnet_igraph(cg_tnet, type = \"weighted one-mode tnet\", directed = NULL)\ncg.ig&lt;- add_vertices(cg.ig, nv = length(valid_vertices), name = valid_vertices)\nnamesss &lt;-data.frame(id = 1:35, node = colnames(concepts))\ncg.stat &lt;- as.network.matrix(cg_tnet)\nnetwork.vertex.names(cg.stat) &lt;- namesss$node"
  },
  {
    "objectID": "posts/post-with-code/RolesandPartions.html#node-level-measures",
    "href": "posts/post-with-code/RolesandPartions.html#node-level-measures",
    "title": "Plots by Roles",
    "section": "Node-Level Measures",
    "text": "Node-Level Measures\n\n\nCode\n#get betweennes, power centrailitty, degree strength (based on weights), closeness, and constraints\ncg.nodes&lt;-data.frame(name=cg.stat%v%\"vertex.names\",\n        degree.wt=igraph::strength(cg.ig),\n        power.cent =igraph::power_centrality(cg.ig),\n        betweenness=sna::betweenness(cg.stat, gmode=\"graph\"),\n        close=sna::closeness(cg.stat, gmode=\"graph\"),\n        constraint=igraph::constraint(cg.ig))\neigen_cent_df &lt;- as.data.frame(eigen_centrality(cg.ig))\neigen_cent_df &lt;- head(eigen_cent_df,35)\ncg.nodes&lt;-cbind(cg.nodes, eigen_cent_df)\ncg.nodes &lt;- head(cg.nodes,35) # don't care about place holder empty columns,\ncg.nodes &lt;- cg.nodes[, 1:8]\nhead(cg.nodes, 6)"
  },
  {
    "objectID": "posts/post-with-code/RolesandPartions.html#strucutual-equivalnce",
    "href": "posts/post-with-code/RolesandPartions.html#strucutual-equivalnce",
    "title": "Plots by Roles",
    "section": "Strucutual Equivalnce",
    "text": "Strucutual Equivalnce\n\n\nCode\n#STRUCTUAL Equivalence \n#Average Cluster Method\ncg.ase &lt;- sna::equiv.clust(cg.stat,\n                          equiv.fun = \"sedist\",\n                      cluster.method = \"average\",\n                          method = \"hamming\", \n                          mode = \"graph\")\nplot(cg.ase, cg.ase$glabels)"
  },
  {
    "objectID": "posts/post-with-code/RolesandPartions.html#partitioning",
    "href": "posts/post-with-code/RolesandPartions.html#partitioning",
    "title": "Plots by Roles",
    "section": "Partitioning",
    "text": "Partitioning\n\nHeight equal to 10\n\n\nCode\n#Partitioning Average Cluster Method -5\nplot(cg.ase,labels = cg.ase$glabels)\nrect.hclust(cg.ase$cluster, h = 5)"
  },
  {
    "objectID": "posts/post-with-code/RolesandPartions.html#blockmodeling",
    "href": "posts/post-with-code/RolesandPartions.html#blockmodeling",
    "title": "Plots by Roles",
    "section": "BlockModeling",
    "text": "BlockModeling\n\n\nCode\n#testing block model\nblock_ase &lt;-blockmodel(cg.stat, cg.ase, k=9, h=5) #tryin out 5\n#View model\nplot.block(block_ase, cex.lab=.5)"
  },
  {
    "objectID": "posts/post-with-code/RolesandPartions.html#centrality-by-role",
    "href": "posts/post-with-code/RolesandPartions.html#centrality-by-role",
    "title": "Plots by Roles",
    "section": "Centrality by Role",
    "text": "Centrality by Role\n\n\nCode\nblk_mod &lt;- blockmodel(cg.stat, cg.ase, k=9)\n# assign block membership to vertex attribute\ncg.stat%v%\"role\" &lt;- blk_mod$block.membership[match(cg.stat%v%\"vertex.names\",\n                                                     blk_mod$plabels)]\n\n\n# attach\ncg.nodes$role &lt;- cg.stat%v%\"role\"\n\n# summarize various network statistics by role\ncg.nodes %&gt;%\n  select(-name) %&gt;%\n  group_by(role) %&gt;%\n  mutate(n=n()) %&gt;%\n  summarise_all(mean, na.rm = TRUE) %&gt;%\n  as.matrix() %&gt;%\n  print(digits=2)\n\n\n      role degree.wt    power.cent betweenness close constraint vector value n\n [1,]    1       376 3.39641642476       0.000  1.00       0.12   0.73   361 4\n [2,]    2       357 0.21227602615       0.000  1.00       0.12   0.69   361 4\n [3,]    3       369 0.01096759428       0.000  1.00       0.12   0.72   361 5\n [4,]    4       340 0.00051594822       0.018  0.99       0.12   0.67   361 3\n [5,]    5       300 0.00005182480       0.026  1.00       0.12   0.59   361 4\n [6,]    6       370 0.00000323865       0.026  1.00       0.12   0.72   361 4\n [7,]    7       333 0.00000020202       0.026  1.00       0.12   0.65   361 4\n [8,]    8       367 0.00000001004       0.026  1.00       0.12   0.71   361 5\n [9,]    9       262 0.00000000021       0.000  0.99       0.12   0.52   361 2\n\n\n\n\nCode\n# chosen blockmodel and chose partition partitions\ncg_mod &lt;- blockmodel(cg.stat, cg.ase, k=9)\n# assign block membership to vertex attribute\ncg.stat%v%\"role\" &lt;- cg_mod$block.membership[match(cg.stat%v%\"vertex.names\",\n                                                     cg_mod$plabels)]\n\nGGally::ggnet2(cg.stat,\n               node.color = \"role\",\n               node.size = degree(cg.stat, gmode = \"graph\"),\n               node.label = \"vertex.names\",\n               node.alpha = .7)\n\n\n\n\n\n\n\n\n\n`"
  },
  {
    "objectID": "posts/post-with-code/Categories.html",
    "href": "posts/post-with-code/Categories.html",
    "title": "Final Network Graphs by Categories",
    "section": "",
    "text": "In this section we are looking at the networks and seeing the results clustering. In these directed graphs the in-degree and out-degrees mean the following.\nin-degrees - the node is influenced by the node that is pointing at it.\nout-degree - this node is has an influence on the node it is pointing to.\n\n\nCode\nV(cg.ig)$role &lt;- cg_mod$block.membership[match(V(cg.ig)$name, cg_mod$plabels)]\nV(cg.ig)$category &lt;- names.attr$category\n# Create an empty list to store subgraphs\ncg.subgraphs &lt;- list()\n\n# Loop through each role and create a subgraph\nfor (i in 1:9) {\n  # Get the nodes for the current role\n  role_nodes &lt;- which(cg.stat %v% \"role\" == i)\n  cat_nodes &lt;- which(cg.stat %v% \"category\" == i)\n  \n  # Extract the subgraph for the current role\n  cg.subgraphs[[i]] &lt;- induced_subgraph(cg.ig, vids = role_nodes)\n   V(cg.subgraphs[[i]])$node_names &lt;- V(cg.ig)$role[role_nodes]\n}\n\n\n\n\nTopics related to the exertion, distribution, and dynamics of power in society, politics, and economics. This category encompasses topics such as imperialism, racism, colonization, capitalism, and other forms of power dynamics.\nImperialism is the node with the most influence, as it has the strongest out degree.\nColonization is the most influenced, as it has the strongest in degree.\n\n\nCode\nplot(cg.subgraphs[[1]], layout = layout_with_fr(cg.subgraphs[[1]]), \n     main = \"Power Dynamics\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)\n\n\n\n\n\n\n\n\n\n\n\n\nTopics related to the foundational elements of society that support its functioning, including housing, education, infrastructure, and criminal justice.\nFor this category Housing is the overarching concept, affecting the other three nodes. What’s also interesting is that Housing had the highest rating as a problem in the United States\nCriminal Justice has the highest in-degree being influenced by all other concepts.\n\n\nCode\nplot(cg.subgraphs[[2]], layout = layout_with_fr(cg.subgraphs[[2]]), \n     main = \"Social Infrustructure\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)\n\n\n\n\n\n\n\n\n\n\n\n\nTopics concerning the economic system, government structures, and their interactions, including economy, income/wealth, corporate wealth, federal/government structure, and related aspects.\nTransportation has the highest out-degree\nCorporate wealth &. Fed/Govt structure. has the highest in-degree\n\n\nCode\nplot(cg.subgraphs[[3]], layout = layout_with_fr(cg.subgraphs[[3]]), \n     main = \"Economic & Government Structure\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)\n\n\n\n\n\n\n\n\n\n\n\n\nTopics pertaining to regulatory measures, control mechanisms, and governance practices, such as gun control, banking regulations, voting access, and other forms of regulation.\nGun control has the highest out degree influencing the other two nodes\nVoting Access has the highest in degree being influenced by both nodess\n\n\nCode\nplot(cg.subgraphs[[4]], layout = layout_with_fr(cg.subgraphs[[4]]), \n     main = \"Regulation & Control\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)\n\n\n\n\n\n\n\n\n\n\n\n\nTopics addressing global issues and challenges that transcend national boundaries, including climate change, child poverty, nationalizing, digital literacy, and other global challenges.\nClimate Change has the highest out-degree\nDigital Literacy has the highest in-degree\n\n\nCode\nplot(cg.subgraphs[[5]], layout = layout_with_fr(cg.subgraphs[[5]]), \n     main = \"Global Challanges\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)\n\n\n\n\n\n\n\n\n\n\n\n\nTopics encompassing social and global issues that impact societies worldwide, such as AI, immigration, misinformation, pollution & plastic, and indigenous sovereignty.\nAI has the highest out-degree\nPollution & Plastic has the highest in-degree\n\n\nCode\nplot(cg.subgraphs[[6]], layout = layout_with_fr(cg.subgraphs[[6]]), \n     main = \"Social & Global Issues\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)\n\n\n\n\n\n\n\n\n\n\n\n\nTopics revolving around trust, rights, and societal values, including weakening of the global West, public trust, homeless rights, welfare systems, and civil rights.\nHomeless Rights has the highest in degree\nIndigenous Sovereignty has the highest out degree\n\n\nCode\nplot(cg.subgraphs[[7]], layout = layout_with_fr(cg.subgraphs[[7]]), \n     main = \"Trust & Rights\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)\n\n\n\n\n\n\n\n\n\n\n\n\nTopics concerning media, journalism, governance, and their roles in society, including journalism/media, foreign policy, insider trading, generational wealth, and Eurocentrism.\nWelfare Systems has the highest out degree\nInsider trading has the highest In- degree\n\n\nCode\nplot(cg.subgraphs[[8]], layout = layout_with_fr(cg.subgraphs[[8]]), \n     main = \"Media & Governence\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)\n\n\n\n\n\n\n\n\n\n\n\n\nTopics focusing on cultural awareness, equity, and diversity, such as cultural awareness & equity and Eurocentrism.\nGenerational wealth has the highest in degree going to the only other node in the catergory\n\n\nCode\nplot(cg.subgraphs[[9]], layout = layout_with_fr(cg.subgraphs[[9]]), \n     main = \"Cultural Awareness & Equity\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)"
  },
  {
    "objectID": "posts/post-with-code/Categories.html#power-dynamics",
    "href": "posts/post-with-code/Categories.html#power-dynamics",
    "title": "Final Network Graphs by Categories",
    "section": "",
    "text": "Topics related to the exertion, distribution, and dynamics of power in society, politics, and economics. This category encompasses topics such as imperialism, racism, colonization, capitalism, and other forms of power dynamics.\nImperialism is the node with the most influence, as it has the strongest out degree.\nColonization is the most influenced, as it has the strongest in degree.\n\n\nCode\nplot(cg.subgraphs[[1]], layout = layout_with_fr(cg.subgraphs[[1]]), \n     main = \"Power Dynamics\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)"
  },
  {
    "objectID": "posts/post-with-code/Categories.html#social-infrastructure",
    "href": "posts/post-with-code/Categories.html#social-infrastructure",
    "title": "Final Network Graphs by Categories",
    "section": "",
    "text": "Topics related to the foundational elements of society that support its functioning, including housing, education, infrastructure, and criminal justice.\nFor this category Housing is the overarching concept, affecting the other three nodes. What’s also interesting is that Housing had the highest rating as a problem in the United States\nCriminal Justice has the highest in-degree being influenced by all other concepts.\n\n\nCode\nplot(cg.subgraphs[[2]], layout = layout_with_fr(cg.subgraphs[[2]]), \n     main = \"Social Infrustructure\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)"
  },
  {
    "objectID": "posts/post-with-code/Categories.html#economic-government-structure",
    "href": "posts/post-with-code/Categories.html#economic-government-structure",
    "title": "Final Network Graphs by Categories",
    "section": "",
    "text": "Topics concerning the economic system, government structures, and their interactions, including economy, income/wealth, corporate wealth, federal/government structure, and related aspects.\nTransportation has the highest out-degree\nCorporate wealth &. Fed/Govt structure. has the highest in-degree\n\n\nCode\nplot(cg.subgraphs[[3]], layout = layout_with_fr(cg.subgraphs[[3]]), \n     main = \"Economic & Government Structure\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)"
  },
  {
    "objectID": "posts/post-with-code/Categories.html#regulation-control",
    "href": "posts/post-with-code/Categories.html#regulation-control",
    "title": "Final Network Graphs by Categories",
    "section": "",
    "text": "Topics pertaining to regulatory measures, control mechanisms, and governance practices, such as gun control, banking regulations, voting access, and other forms of regulation.\nGun control has the highest out degree influencing the other two nodes\nVoting Access has the highest in degree being influenced by both nodess\n\n\nCode\nplot(cg.subgraphs[[4]], layout = layout_with_fr(cg.subgraphs[[4]]), \n     main = \"Regulation & Control\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)"
  },
  {
    "objectID": "posts/post-with-code/Categories.html#global-challenges",
    "href": "posts/post-with-code/Categories.html#global-challenges",
    "title": "Final Network Graphs by Categories",
    "section": "",
    "text": "Topics addressing global issues and challenges that transcend national boundaries, including climate change, child poverty, nationalizing, digital literacy, and other global challenges.\nClimate Change has the highest out-degree\nDigital Literacy has the highest in-degree\n\n\nCode\nplot(cg.subgraphs[[5]], layout = layout_with_fr(cg.subgraphs[[5]]), \n     main = \"Global Challanges\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)"
  },
  {
    "objectID": "posts/post-with-code/Categories.html#social-global-issues",
    "href": "posts/post-with-code/Categories.html#social-global-issues",
    "title": "Final Network Graphs by Categories",
    "section": "",
    "text": "Topics encompassing social and global issues that impact societies worldwide, such as AI, immigration, misinformation, pollution & plastic, and indigenous sovereignty.\nAI has the highest out-degree\nPollution & Plastic has the highest in-degree\n\n\nCode\nplot(cg.subgraphs[[6]], layout = layout_with_fr(cg.subgraphs[[6]]), \n     main = \"Social & Global Issues\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)"
  },
  {
    "objectID": "posts/post-with-code/Categories.html#trust-rights",
    "href": "posts/post-with-code/Categories.html#trust-rights",
    "title": "Final Network Graphs by Categories",
    "section": "",
    "text": "Topics revolving around trust, rights, and societal values, including weakening of the global West, public trust, homeless rights, welfare systems, and civil rights.\nHomeless Rights has the highest in degree\nIndigenous Sovereignty has the highest out degree\n\n\nCode\nplot(cg.subgraphs[[7]], layout = layout_with_fr(cg.subgraphs[[7]]), \n     main = \"Trust & Rights\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)"
  },
  {
    "objectID": "posts/post-with-code/Categories.html#media-governance",
    "href": "posts/post-with-code/Categories.html#media-governance",
    "title": "Final Network Graphs by Categories",
    "section": "",
    "text": "Topics concerning media, journalism, governance, and their roles in society, including journalism/media, foreign policy, insider trading, generational wealth, and Eurocentrism.\nWelfare Systems has the highest out degree\nInsider trading has the highest In- degree\n\n\nCode\nplot(cg.subgraphs[[8]], layout = layout_with_fr(cg.subgraphs[[8]]), \n     main = \"Media & Governence\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)"
  },
  {
    "objectID": "posts/post-with-code/Categories.html#cultural-awareness-equity",
    "href": "posts/post-with-code/Categories.html#cultural-awareness-equity",
    "title": "Final Network Graphs by Categories",
    "section": "",
    "text": "Topics focusing on cultural awareness, equity, and diversity, such as cultural awareness & equity and Eurocentrism.\nGenerational wealth has the highest in degree going to the only other node in the catergory\n\n\nCode\nplot(cg.subgraphs[[9]], layout = layout_with_fr(cg.subgraphs[[9]]), \n     main = \"Cultural Awareness & Equity\",\n     vertex.label.color = \"black\", vertex.label.family = \"sans\",\n     vertex.label.dist = 1.5, edge.width = 2)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ClairVoyant Data Scientist",
    "section": "",
    "text": "Wicked Concepts\n\n\n\n\n\n\n\n\n\n\n\nRylyn Williams\n\n\n\n\n\n\n\n\n\n\n\n\nWicked Problems Proposal\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlots by Roles\n\n\n\n\n\n\n\n\n\n\n\nRylyn Williams\n\n\n\n\n\n\n\n\n\n\n\n\nFinal Network Graphs by Categories\n\n\n\n\n\n\n\n\n\n\n\nRylyn Williams\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nMay 1, 2024\n\n\nRylyn Williams\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nApr 30, 2024\n\n\nHarlow Malloc\n\n\n\n\n\n\nNo matching items"
  }
]